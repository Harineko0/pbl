name: Deploy (production)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to GAS
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: gas
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Create .clasp.json file
        shell: bash
        run: |
          cat > .clasp.json <<EOF
          {
            "scriptId": "${{ secrets.CLASP_SCRIPT_ID }}",
            "rootDir": "dist"
          }
          EOF
      - name: Create ~/.clasprc.json file
        shell: bash
        run: |
          cat > ~/.clasprc.json <<EOF
          {
              "token": {
                "access_token": "${{ secrets.ACCESS_TOKEN }}",
                "scope": "https://www.googleapis.com/auth/logging.read https://www.googleapis.com/auth/script.projects https://www.googleapis.com/auth/drive.metadata.readonly https://www.googleapis.com/auth/userinfo.email openid https://www.googleapis.com/auth/service.management https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/script.webapp.deploy https://www.googleapis.com/auth/script.deployments https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/cloud-platform",
                "token_type": "Bearer",
                "id_token": "${{ secrets.ID_TOKEN }}",
                "expiry_date": ${{ secrets.EXPIRY_DATE }},
                "refresh_token": "${{ secrets.REFRESH_TOKEN }}"
              },
              "oauth2ClientSettings": {
                "clientId": "${{ secrets.CLIENT_ID }}",
                "clientSecret": "${{ secrets.CLIENT_SECRET }}",
                "redirectUri": "http://localhost"
              },
              "isLocalCreds": false
          }
          EOF
      - name: Cache node modules
        uses: actions/cache@v3
        id: cache-node
        env:
          cache-name: cache-node
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-cache-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-cache-node-
            ${{ runner.os }}-cache-
            ${{ runner.os }}-
      - name: Install node modules
        if: ${{ steps.cache-node.outputs.cache-hit != 'true' }}
        run: pnpm i
      - name: Build
        run: pnpm run build
      - name: Push
        run: pnpm run push
      - name: Deploy
        run: pnpm run deploy -id ${{ vars.GAS_DEPLOY_ID }}
